Write-Host "Loading azd .env file from current environment"

# Use the `get-values` azd command to retrieve environment variables from the `.env` file
$envValues = azd env get-values

$envDict = @{}

foreach ($line in $envValues -split "`n") {
    if ($line -match '^(.*?)=(.*)$') {
        $key = $Matches[1]
        $value = $Matches[2].Trim('"') # Remove surrounding quotes
        $envDict[$key] = $value
    }
}

# Build the .env content using keys from envDict
$envContent = @"
# This file is automatically generated by the setup_local.ps1 script.
AZURE_OPENAI_ENDPOINT=$($envDict['AI_ENDPOINT'])
AZURE_OPENAI_CHAT_DEPLOYMENT_NAME=$($envDict['AZURE_OPENAI_AGENTS_MODEL'])
CONSOLE_LOGGING=False
AZURE_AI_FOUNDRY_CONNECTION_STRING=$($envDict['AZURE_AI_FOUNDRY_CONNECTION_STRING'])
SEMANTICKERNEL_EXPERIMENTAL_GENAI_ENABLE_OTEL_DIAGNOSTICS=true
SEMANTICKERNEL_EXPERIMENTAL_GENAI_ENABLE_OTEL_DIAGNOSTICS_SENSITIVE=true
APPLICATIONINSIGHTS_CONNECTION_STRING=$($envDict['APPLICATIONINSIGHTS_CONNECTION_STRING'])
AZURE_MAPS_CLIENT_ID=$($envDict['AZURE_MAPS_CLIENT_ID'])
"@

# Write to .env files
$envContent | Set-Content ./demo_app/.env
$envContent | Set-Content ./agents-workshop/02-single-agent-example/azure-ai-agent/.env
$envContent | Set-Content ./agents-workshop/02-single-agent-example/semantic-kernel-agent/.env